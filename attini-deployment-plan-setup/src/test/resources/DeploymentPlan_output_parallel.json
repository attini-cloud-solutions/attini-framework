{
  "accountId": "655047308345",
  "fragment": {
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Attini init deploy stack for distribution: platform",
    "Parameters": {
      "EnvironmentName": {
        "Type": "String",
        "Default": "dev"
      },
      "AttiniDistributionName": {
        "Type": "String"
      },
      "AttiniDistributionId": {
        "Type": "String"
      },
      "Test": {
        "Type": "String"
      },
      "Container": {
        "Type": "String"
      }
    },
    "Outputs": {
      "Container": {
        "Value": {
          "Ref": "Container"
        }
      },
      "Test": {
        "Value": {
          "Ref": "Test"
        }
      }
    },
    "Resources": {
      "AttiniDeploymentPlanSfnMyDeploymentPlanTrigger": {
        "Type": "Custom::AttiniDeploymentPlanTrigger",
        "Properties": {
          "ServiceToken": {
            "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:attini-deployment-plan-setup"
          },
          "SfnName": {
            "Fn::GetAtt": "AttiniDeploymentPlanSfnMyDeploymentPlan.Name"
          },
          "SfnArn": {
            "Ref": "AttiniDeploymentPlanSfnMyDeploymentPlan"
          },
          "DeploymentPlanLogicalName": "AttiniDeploymentPlanSfnMyDeploymentPlan",
          "StackName": {
            "Ref": "AWS::StackName"
          },
          "Runners": []
        }
      },
      "AttiniPostExecutionActionsMyDeploymentPlan": {
        "Properties": {
          "Description": "Attini deployment plan post hook",
          "EventPattern": {
            "Fn::Sub": "{\"source\": [\"aws.states\"],\"detail-type\": [\"Step Functions Execution Status Change\"],\"detail\": {\"stateMachineArn\": [ \"${AttiniDeploymentPlanSfnMyDeploymentPlan}\"],\"status\": [\"FAILED\",\"SUCCEEDED\",\"ABORTED\",\"TIMED_OUT\"]}}"
          },
          "Targets": [
            {
              "Arn": {
                "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:attini-action"
              },
              "Id": "post-execution-actions"
            }
          ]
        },
        "Type": "AWS::Events::Rule"
      },
      "LambdaServiceRole": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "cloudformation.amazonaws.com"
                }
              }
            ],
            "Version": "2012-10-17"
          },
          "ManagedPolicyArns": [
            "arn:aws:iam::aws:policy/AdministratorAccess"
          ]
        }
      },
      "AttiniDeploymentPlanSfnMyDeploymentPlan": {
        "Type": "AWS::Serverless::StateMachine",
        "Metadata": {
          "AttiniSteps": [
            "DeployMessageQueue",
            "DeploySocksInventory",
            "DeployAuditLog"
          ]
        },
        "Properties": {
          "Role": "arn:aws:iam::655047308345:role/attini/attini-action-lambda-service-role-eu-west-1",
          "Definition": {
            "StartAt": "GetDeployData",
            "States": {
              "DeployMessageQueue": {
                "Type": "Task",
                "Resource": "arn:aws:states:::lambda:invoke.waitForTaskToken",
                "Parameters": {
                  "FunctionName": "attini-action",
                  "Payload": {
                    "customData.$": "$.customData",
                    "deploymentOriginData.$": "$.deploymentOriginData",
                    "attiniActionType": "DeployCfn",
                    "deploymentPlanExecutionMetadata": {
                      "executionArn.$": "$$.Execution.Id",
                      "executionStartTime.$": "$$.Execution.StartTime",
                      "retryCounter.$": "$$.State.RetryCount",
                      "sfnToken.$": "$$.Task.Token",
                      "stepName.$": "$$.State.Name"
                    },
                    "output.$": "$.output",
                    "dependencies.$": "$.dependencies",
                    "CfnConfig": {
                      "StackName": null,
                      "Template": "sqs.yaml"
                    }
                  }
                },
                "Retry": [
                  {
                    "ErrorEquals": [
                      "IsExecuting"
                    ],
                    "IntervalSeconds": 3,
                    "MaxAttempts": 650,
                    "BackoffRate": 1.01
                  },
                  {
                    "ErrorEquals": [
                      "RollBackCompleteState"
                    ],
                    "IntervalSeconds": 4,
                    "MaxAttempts": 1,
                    "BackoffRate": 1
                  },
                  {
                    "BackoffRate": 1.2,
                    "ErrorEquals": [
                      "Lambda.TooManyRequestsException"
                    ],
                    "IntervalSeconds": 2,
                    "MaxAttempts": 30
                  }
                ],
                "Next": "DeloyParallel"
              },
              "DeloyParallel": {
                "Type": "Parallel",
                "Next": "TriggerLambdas",
                "Branches": [
                  {
                    "StartAt": "DeploySocksInventory",
                    "States": {
                      "DeploySocksInventory": {
                        "Type": "Task",
                        "Resource": "arn:aws:states:::lambda:invoke.waitForTaskToken",
                        "Parameters": {
                          "FunctionName": "attini-action",
                          "Payload": {
                            "customData.$": "$.customData",
                            "deploymentOriginData.$": "$.deploymentOriginData",
                            "attiniActionType": "DeployCfn",
                            "deploymentPlanExecutionMetadata": {
                              "executionArn.$": "$$.Execution.Id",
                              "executionStartTime.$": "$$.Execution.StartTime",
                              "retryCounter.$": "$$.State.RetryCount",
                              "sfnToken.$": "$$.Task.Token",
                              "stepName.$": "$$.State.Name"
                            },
                            "output.$": "$.output",
                            "dependencies.$": "$.dependencies",
                            "CfnConfig": {
                              "StackName": null,
                              "Template": "socksInventory.yaml"
                            }
                          }
                        },
                        "Retry": [
                          {
                            "ErrorEquals": [
                              "IsExecuting"
                            ],
                            "IntervalSeconds": 3,
                            "MaxAttempts": 650,
                            "BackoffRate": 1.01
                          },
                          {
                            "ErrorEquals": [
                              "RollBackCompleteState"
                            ],
                            "IntervalSeconds": 4,
                            "MaxAttempts": 1,
                            "BackoffRate": 1
                          },
                          {
                            "BackoffRate": 1.2,
                            "ErrorEquals": [
                              "Lambda.TooManyRequestsException"
                            ],
                            "IntervalSeconds": 2,
                            "MaxAttempts": 30
                          }
                        ],
                        "End": true
                      }
                    }
                  },
                  {
                    "StartAt": "DeployAuditLog",
                    "States": {
                      "DeployAuditLog": {
                        "Type": "Task",
                        "Resource": "arn:aws:states:::lambda:invoke.waitForTaskToken",
                        "Parameters": {
                          "FunctionName": "attini-action",
                          "Payload": {
                            "customData.$": "$.customData",
                            "deploymentOriginData.$": "$.deploymentOriginData",
                            "attiniActionType": "DeployCfn",
                            "deploymentPlanExecutionMetadata": {
                              "executionArn.$": "$$.Execution.Id",
                              "executionStartTime.$": "$$.Execution.StartTime",
                              "retryCounter.$": "$$.State.RetryCount",
                              "sfnToken.$": "$$.Task.Token",
                              "stepName.$": "$$.State.Name"
                            },
                            "output.$": "$.output",
                            "dependencies.$": "$.dependencies",
                            "CfnConfig": {
                              "StackName": null,
                              "Template": "auditLogEndpoint.yaml"
                            }
                          }
                        },
                        "Retry": [
                          {
                            "ErrorEquals": [
                              "IsExecuting"
                            ],
                            "IntervalSeconds": 3,
                            "MaxAttempts": 650,
                            "BackoffRate": 1.01
                          },
                          {
                            "ErrorEquals": [
                              "RollBackCompleteState"
                            ],
                            "IntervalSeconds": 4,
                            "MaxAttempts": 1,
                            "BackoffRate": 1
                          },
                          {
                            "BackoffRate": 1.2,
                            "ErrorEquals": [
                              "Lambda.TooManyRequestsException"
                            ],
                            "IntervalSeconds": 2,
                            "MaxAttempts": 30
                          }
                        ],
                        "End": true
                      }
                    }
                  }
                ]
              },
              "TriggerLambdas": {
                "End": true,
                "Type": "Parallel",
                "Branches": [
                  {
                    "StartAt": "TriggerAuditLog",
                    "States": {
                      "TriggerAuditLog": {
                        "Type": "Task",
                        "Resource": "arn:aws:states:::lambda:invoke",
                        "Parameters": {
                          "FunctionName.$": null,
                          "Payload.$": "$"
                        },
                        "End": true
                      }
                    }
                  },
                  {
                    "StartAt": "TriggerSocksInventory",
                    "States": {
                      "TriggerSocksInventory": {
                        "Type": "Task",
                        "Resource": "arn:aws:states:::lambda:invoke",
                        "Parameters": {
                          "FunctionName.$": null,
                          "Payload.$": "$"
                        },
                        "End": true
                      }
                    }
                  }
                ]
              },
              "GetDeployData": {
                "Type": "Task",
                "Resource": {
                  "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:attini-action"
                },
                "Parameters": {
                  "customData.$": "$",
                  "attiniActionType": "GetDeployOriginData",
                  "sfnArn.$": "$$.StateMachine.Id",
                  "executionArn.$": "$$.Execution.Id"
                },
                "ResultPath": "$",
                "Next": "DeployMessageQueue"
              }
            }
          },
          "Tags": {
            "AttiniProvider": "DeploymentPlan"
          }
        }
      }
    }
  },
  "transformId": "655047308345::AttiniDeploymentPlan",
  "requestId": "a57ac857-6940-4520-98c2-a93078e88d0c",
  "region": "eu-west-1",
  "params": {},
  "templateParameterValues": {
    "AttiniDistributionId": "79852f8a-0107-43ed-a6ce-45b5cdeeb288",
    "Container": "12344",
    "EnvironmentName": "dev",
    "Test": "test",
    "AttiniDistributionName": "platform"
  },
  "status": "success"
}
